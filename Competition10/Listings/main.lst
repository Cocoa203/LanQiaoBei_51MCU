C51 COMPILER V9.60.0.0   MAIN                                                              01/16/2023 15:55:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\program\keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "Key.h"
   3          #include "Timer.h"
   4          #include "Nixie.h"
   5          #include "PCF8591.h"
   6          #include "NE555N.h"
   7          
   8          unsigned char AD_Flag,DA_Mode,LED_Mode=1,Measure_Mode,Nixie_Mode=1;
   9          
  10          unsigned long Power(unsigned int num,unsigned char x)
  11          {
  12   1              unsigned long result=1;
  13   1              while(x--)
  14   1              {
  15   2                      result*=num;
  16   2              }
  17   1              return result;
  18   1      }
  19          
  20          void main()
  21          {
  22   1              unsigned char key_num,temp,i,j;
  23   1              unsigned int AD_data;
  24   1              unsigned long frequency;
  25   1              float AD_value;
  26   1              Timer0_Init();
  27   1              Timer1_Init();
  28   1              while(1)
  29   1              {
  30   2                      key_num=Key();
  31   2                      if(key_num==4)
  32   2                      {
  33   3                              Measure_Mode++;
  34   3                              Measure_Mode%=2;
  35   3                      }
  36   2                      if(key_num==5)
  37   2                      {
  38   3                              DA_Mode++;
  39   3                              DA_Mode%=2;
  40   3                      }
  41   2                      if(key_num==6)
  42   2                      {
  43   3                              LED_Mode++;
  44   3                              LED_Mode%=2;
  45   3                      }
  46   2                      if(key_num==7)
  47   2                      {
  48   3                              Nixie_Mode++;
  49   3                              Nixie_Mode%=2;
  50   3                      }
  51   2      
  52   2                      //AD、DA模块
  53   2                      if(Measure_Mode==0)
  54   2                      {
C51 COMPILER V9.60.0.0   MAIN                                                              01/16/2023 15:55:27 PAGE 2   

  55   3                              ET0=0;
  56   3                              if(AD_Flag)
  57   3                      {
  58   4                              AD_Flag=0;
  59   4                              AD_value=PCF8591_AD(3);
  60   4                      }
  61   3                      AD_data=AD_value*100;
  62   3                      Nixie(1,13);
  63   3                      Nixie(6,AD_data/100%10);
  64   3                      Nixie(6,11);
  65   3                      Nixie(7,AD_data/10%10);
  66   3                      Nixie(8,AD_data%10);
  67   3                      Nixie(2,10);
  68   3                      Nixie(3,10);
  69   3                      Nixie(4,10);
  70   3                      Nixie(5,10);
  71   3                      if(DA_Mode)
  72   3                      {
  73   4                              PCF8591_DA(AD_value);
  74   4                      }
  75   3                      else
  76   3                      {
  77   4                              PCF8591_DA(2.0);
  78   4                      }
  79   3                      }
  80   2                      //频率测量模块
  81   2                      if(Measure_Mode==1)
  82   2                      {
  83   3                              ET0=1;
  84   3                              frequency=NE555N();
  85   3                              Nixie(1,14);
  86   3                              Nixie(2,10);
  87   3                              Nixie(6,12);
  88   3                              for(i=1;i<7;i++)
  89   3                              {
  90   4                                      temp=frequency/(100000/Power(10,i-1));
  91   4                                      if(temp)
  92   4                                              break;
  93   4                              }
  94   3                              for(j=2+i;j<=8;j++)
  95   3                                      Nixie(j,frequency/(100000/(Power(10,j-3)))%10);
  96   3                              for(j=2+i-1;j>2;j--)
  97   3                                      Nixie(j,10);
  98   3                      }
  99   2                      
 100   2                      //LED模块
 101   2                      if(LED_Mode)
 102   2                      {
 103   3                              if(Measure_Mode==0)
 104   3                              {
 105   4                                      P0=0xff;
 106   4                                      P2&=0x1f;
 107   4                                      P2|=0x80;
 108   4                                      P00=0;P01=1;
 109   4                                      if(AD_value<1.5||(AD_value>=2.5&&AD_value<3.5))
 110   4                                      {
 111   5                                              P02=1;
 112   5                                      }
 113   4                                      else
 114   4                                      {
 115   5                                              P02=0;
 116   5                                      }
C51 COMPILER V9.60.0.0   MAIN                                                              01/16/2023 15:55:27 PAGE 3   

 117   4                                      
 118   4                                      if(DA_Mode)
 119   4                                      {
 120   5                                              P04=0;
 121   5                                      }
 122   4                                      else
 123   4                                      {
 124   5                                              P04=1;
 125   5                                      }
 126   4                                      P2&=0x1f;
 127   4                              }
 128   3                              if(Measure_Mode==1)
 129   3                              {
 130   4                                      P0=0xff;
 131   4                                      P2&=0x1f;
 132   4                                      P2|=0x80;
 133   4                                      P00=1;P01=0;
 134   4                                      if(frequency<1000||(frequency>=5000&&frequency<10000))
 135   4                                      {
 136   5                                              P03=1;
 137   5                                      }
 138   4                                      else
 139   4                                      {
 140   5                                              P03=0;
 141   5                                      }
 142   4                                      P2&=0x1f;
 143   4                              }
 144   3                      }
 145   2                      else
 146   2                      {
 147   3                              P0=0xff;
 148   3                              P2&=0x1f;
 149   3                              P2|=0x80;
 150   3                              P2&=0x1f;
 151   3                      }
 152   2              }
 153   1      }
 154          
 155          void Timer0_Routine() interrupt 1
 156          {
 157   1              NE555N_Count++;
 158   1      }
 159          
 160          void Timer1_Routine() interrupt 3
 161          {
 162   1              
 163   1              static unsigned int i,j;
 164   1              i++;
 165   1              j++;
 166   1              if(i%2==0)
 167   1              {
 168   2                      if(Nixie_Mode)
 169   2                              NixieScan();
 170   2                      else
 171   2                              NixieOff();
 172   2              }
 173   1              if(i>=200)
 174   1              {
 175   2                      i=0;
 176   2                      AD_Flag=1;
 177   2              }
 178   1              if(j>=1000)
C51 COMPILER V9.60.0.0   MAIN                                                              01/16/2023 15:55:27 PAGE 4   

 179   1              {
 180   2                      j=0;
 181   2                      NE555N_Flag=1;
 182   2              }
 183   1      }
 184                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    885    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
